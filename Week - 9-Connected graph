b) Write a program to check whether a given graph is connected or not using the DFS method.     

#include <stdio.h>
#include <stdbool.h>

void dfs(int graph[][5], int node, bool visited[], int n) {
    visited[node] = true; 
    for (int i = 0; i < n; i++) {
        if (graph[node][i] == 1 && !visited[i]) { 
            dfs(graph, i, visited, n);
        }
    }
}
bool isConnected(int graph[][5], int n) {
    bool visited[n];
    for (int i = 0; i < n; i++) {
        visited[i] = false;  
    }
    dfs(graph, 0, visited, n);


    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            return false; 
        }
    }
    return true;
}
int main() {
    int n;
    printf("Enter the value for n \n");
    scanf("%d", &n);
    int graph[n][n];
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            printf("Enter value for graph element\n");
            scanf("\n%d", &graph[i][j]);
        }
    }
    if (isConnected(graph, n)) {
        printf("The graph is connected.\n");
    } else {
        printf("The graph is not connected.\n");
    }

    return 0;
}
