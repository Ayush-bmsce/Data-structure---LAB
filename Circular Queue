#include <stdio.h>
#define MAX_SIZE 5
int queue[MAX_SIZE];
int front = -1, rear = -1;
int isFull()
{
    return (rear + 1) % MAX_SIZE == front;
}
int isEmpty()
{
    return front == -1;
}
void enqueue(int data)
{
    if (isFull()) {
        printf("Queue overflow\n");
        return;
    }
    if (front == -1) {
        front = 0;
    }
    rear = (rear + 1) % MAX_SIZE;
    queue[rear] = data;
    printf("Element %d inserted\n", data);
}
int dequeue()
{
    if (isEmpty()) {
        printf("Queue underflow\n");
        return -1;
    }
    int data = queue[front];
    if (front == rear) {
        front = rear = -1;
    }
    else {
        front = (front + 1) % MAX_SIZE;
    }
    return data;
}
void display()
{
    if (isEmpty()) {
        printf("Queue is empty\n");
        return;
    }
    printf("Queue elements: ");
    int i = front;
    while (i != rear) {
        printf("%d ", queue[i]);
        i = (i + 1) % MAX_SIZE;
    }
    printf("%d\n", queue[rear]);
}
void main()
{
    int choice, values;
    printf("Queue Menu: \n");
    printf("1.Insert(Enqueue): \n");
    printf("2.Delete(Deque): \n");
    printf("3.Display Queue \n");
    printf("4.EXIT \n");
    printf("Enter the number choice : ");
    scanf("%d", &choice);
    switch(choice)
    {
        case 1:
            printf("Enter the value to insert");
            scanf("%d", &values);
            enque(values);
            break;
        case 2:
            dequeue();
            break;
        case 3:
            display();
            break;
        case 4:
            exit(0);
        default:
            printf("Invalid Choice! please try again \n");
    }
}
